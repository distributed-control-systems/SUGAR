function r=inner_product_0_1_4(a,b)


% INNER_PRODUCT_0_1_4 - Computes the inner product of two multivectors in the (0,1,4) algebra.
%
% Syntax:
%   r = inner_product_0_1_4(a, b)
%
% Description:
%   This function calculates the inner product of two multivectors in the
%   (0,1,4) algebra, where each input is represented with thirty-two components.
%   It returns the result as a thirty-two-element array.
%
% Input:
%   a - (MV) A multivector in the (0,1,4) algebra with thirty-two components. Accessed as a.vector.
%   b - (MV) A multivector in the (0,1,4) algebra with thirty-two components. Accessed as b.vector.
%
% Output:
%   r - (1x32 array) The result of the inner product, represented as a thirty-two-element array.
%
% Example:
%   a = MV([3, 5, 7, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, ...
%            13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, ...
%            27, 28, 29, 30, 31, 32], [0, 1, 4]);
%   b = MV([4, 2, 6, 8, 1, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, ...
%            18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, ...
%            32], [0, 1, 4]);
%   r = inner_product_0_1_4(a.vector, b.vector);
%   disp(r); % Displays the result


   pCell = num2cell(a);
   [a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32]=pCell{:};
   pCell = num2cell(b);
   [b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32]=pCell{:};
   r=[a1*b1 - a2*b2,...
      a1*b2 + a2*b1,...
      a1*b3 + a3*b1 - a2*b7 + a7*b2,...
      a1*b4 + a4*b1 - a2*b8 + a8*b2,...
      a1*b5 + a5*b1 - a2*b9 + a9*b2,...
      a1*b6 + a6*b1 - a2*b10 + a10*b2,...
      a1*b7 + a7*b1,...
      a1*b8 + a8*b1,...
      a1*b9 + a9*b1,...
      a1*b10 + a10*b1,...
      a1*b11 + a11*b1 - a2*b17 - a17*b2,...
      a1*b12 + a12*b1 - a2*b18 - a18*b2,...
      a1*b13 + a13*b1 - a2*b19 - a19*b2,...
      a1*b14 + a14*b1 - a2*b20 - a20*b2,...
      a1*b15 + a15*b1 - a2*b21 - a21*b2,...
      a1*b16 + a16*b1 - a2*b22 - a22*b2,...
      a1*b17 + a17*b1,...
      a1*b18 + a18*b1,...
      a1*b19 + a19*b1,...
      a1*b20 + a20*b1,...
      a1*b21 + a21*b1,...
      a1*b22 + a22*b1,...
      a1*b23 + a23*b1 - a2*b27 + a27*b2,...
      a1*b24 + a24*b1 - a2*b28 + a28*b2,...
      a1*b25 + a25*b1 - a2*b29 + a29*b2,...
      a1*b26 + a26*b1 - a2*b30 + a30*b2,...
      a1*b27 + a27*b1,...
      a1*b28 + a28*b1,...
      a1*b29 + a29*b1,...
      a1*b30 + a30*b1,...
      a1*b31 + a31*b1 - a2*b32 - a32*b2,...
      a1*b32 + a32*b1];
end


